# Generated by Django 3.2.7 on 2021-09-18 10:16

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metadata', models.JSONField(blank=True, default=dict, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, max_length=50)),
                ('slug', models.SlugField(allow_unicode=True, blank=True, max_length=255, unique=True)),
                ('permalink', models.URLField(blank=True)),
                ('type', models.CharField(choices=[('simple', 'simple'), ('grounded', 'grounded'), ('external', 'external'), ('variable', 'variable')], default='simple', max_length=50)),
                ('status', models.CharField(blank=True, choices=[('draft', 'draft'), ('pending', 'pending'), ('private', 'private'), ('publish', 'publish')], default='publish', max_length=50)),
                ('featured', models.BooleanField(default=False)),
                ('catalog_visibility', models.CharField(choices=[('visible', 'visible'), ('catalog', 'catalog'), ('search', 'search'), ('hidden', 'hidden')], default='visible', max_length=50)),
                ('description', models.TextField(blank=True)),
                ('short_description', models.CharField(blank=True, max_length=254)),
                ('sku', models.CharField(blank=True, max_length=50)),
                ('price', models.CharField(blank=True, max_length=50)),
                ('regular_price', models.CharField(blank=True, max_length=50)),
                ('sale_price', models.CharField(blank=True, max_length=50)),
                ('date_on_sale_from', models.DateTimeField(blank=True, null=True)),
                ('date_on_sale_to', models.DateTimeField(blank=True, null=True)),
                ('price_html', models.CharField(blank=True, max_length=50)),
                ('on_sale', models.BooleanField(blank=True)),
                ('purchasable', models.BooleanField(blank=True)),
                ('total_sales', models.IntegerField(blank=True)),
                ('virtual', models.BooleanField(blank=True, default=False)),
                ('downloadable', models.BooleanField(blank=True, default=False)),
                ('download_limit', models.IntegerField(blank=True, default=-1)),
                ('download_expiry', models.IntegerField(blank=True, default=-1)),
                ('external_url', models.URLField(blank=True)),
                ('button_text', models.CharField(blank=True, max_length=50)),
                ('tax_status', models.CharField(choices=[('taxable', 'taxable'), ('shipping', 'shipping'), ('none', 'none')], default='taxable', max_length=50)),
                ('manage_stock', models.BooleanField(default=False)),
                ('stock_quantity', models.IntegerField(blank=True)),
                ('stock_status', models.CharField(choices=[('instock', 'instock'), ('outofstock', 'outofstock'), ('onbackorder', 'onbackorder')], default='instock', max_length=50)),
                ('backordered', models.BooleanField(blank=True)),
                ('sold_individually', models.BooleanField(default=False)),
                ('weight', models.CharField(blank=True, max_length=50)),
                ('shipping_required', models.BooleanField(blank=True)),
                ('shipping_taxable', models.BooleanField(blank=True)),
                ('reviews_allowed', models.BooleanField(default=True)),
                ('average_rating', models.CharField(default=0, max_length=50)),
                ('rating_count', models.IntegerField(blank=True)),
                ('purchase_note', models.CharField(blank=True, max_length=50)),
                ('menu_order', models.IntegerField(blank=True)),
                ('categories', models.ManyToManyField(blank=True, to='category.Category')),
                ('cross_sell_ids', models.ManyToManyField(blank=True, related_name='_product_product_cross_sell_ids_+', to='product.Product')),
                ('parent_id', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='product.product')),
                ('related_ids', models.ManyToManyField(blank=True, related_name='_product_product_related_ids_+', to='product.Product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(allow_unicode=True, max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('count', models.IntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('status', models.CharField(choices=[('approved', 'approved'), ('hold', 'hold'), ('spam', 'spam'), ('unspam', 'unspam'), ('trash', 'trash'), ('untrash', 'untrash')], default='approved', max_length=50)),
                ('reviewer', models.CharField(max_length=50)),
                ('reviewer_email', models.EmailField(max_length=254)),
                ('review', models.TextField(blank=True, max_length=254)),
                ('rating', models.IntegerField(blank=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('verified', models.BooleanField(default=False)),
                ('related_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='product.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(blank=True, to='product.Tag'),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, max_length=50)),
                ('src', models.ImageField(blank=True, upload_to=None)),
                ('alt', models.CharField(blank=True, max_length=50)),
                ('related_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='product.product')),
            ],
        ),
        migrations.CreateModel(
            name='Download',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=50)),
                ('file', models.FileField(upload_to='downloads/')),
                ('related_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to='product.product')),
            ],
        ),
        migrations.CreateModel(
            name='Dimension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('length', models.IntegerField(blank=True)),
                ('width', models.IntegerField(blank=True)),
                ('heigth', models.IntegerField(blank=True)),
                ('related_product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dimension', to='product.product')),
            ],
        ),
    ]
